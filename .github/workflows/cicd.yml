name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/weightr-backend

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12.2
      uses: actions/setup-python@v5
      with:
        python-version: "3.12.2"

    - name: Install dependencies and test
      run: |
        make test

  build:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha,format=short
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: prod
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    env:
      KUBECONFIG: ./kubeconfig.yaml

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig.yaml

      - name: Test connectivity
        run: |
          kubectl get pod

      - name: Create GPG_PASSPHRASE secret
        run: |
          kubectl create secret generic gpg-passphrase \
            --from-literal=GPG_PASSPHRASE=${{ secrets.GPG_PASSPHRASE }} \
            --dry-run=client -o yaml | \
            kubectl apply -f -

      - name: Deploy with Helm
        run: |
          # Get the Git SHA for the image tag
          GIT_SHA=$(git rev-parse --short HEAD)
          
          # Deploy using Helm
          helm upgrade --install weightr-backend ./helm \
            --values ./helm/values.yaml \
            --values ./helm/values/values-prod.yaml \
            --set image.tag=sha-${GIT_SHA} \
            --wait --timeout 180s

      - name: Verify Deployment
        run: |
          ssh -i ~/.ssh/id_ed25519 deployer@emelz.com '
            export KUBECONFIG=/home/deployer/.kube/config &&
            kubectl get pods -l app=weightr-backend &&
            kubectl get svc weightr-backend &&
            kubectl get ingress weightr-backend
          '